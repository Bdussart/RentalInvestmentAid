@using RentalInvestmentAid.Models.Bank
@using RentalInvestmentAid.Models.Loan
@using RentalInvestmentAid.Models.Rental
@page "/rates"

<table class="table table-dark table-hover text-center">
    <thead>
        <tr>
            <th>
                Durée
            </th>
            <th>
                taux
            </th>
            <th class="d-none d-sm-table-cell">
                Coût réel
            </th>
            <th>
                Coût par mois
            </th>
            <th>
                Descr.
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (RateInformation rate in RateInformation.OrderBy(r => r.DurationInYear).ThenBy(r=>r.Id))
        {
            var currentLoan = LoansInformations.FirstOrDefault(loan => loan.RateInformation.Id == rate.Id);
            if (currentLoan != null)
            { //Never be the Case !
                <tr class="@CheckRentability(currentLoan, RentsInformation)">
                    <td>
                        @rate.DurationInYear
                    </td>
                    <td>
                        @rate.Rate %
                    </td>
                    <td class="d-none d-sm-table-cell">
                        @currentLoan.TotalCostWithInsurrance €
                    </td>
                    <td>
                        @currentLoan.MonthlyCostWithInsurrance €
                    </td>
                    <td>
                        @rate.Title
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    [Parameter]
    public List<RateInformation> RateInformation { get; set; } = new List<RateInformation>();
    [Parameter]
    public List<LoanInformation> LoansInformations { get; set; } = new List<LoanInformation>();
    [Parameter]
    public List<RentInformation> RentsInformation { get; set; } = new List<RentInformation>();

    [Parameter]
    public bool OnlyRentable { get; set; } = false;

    public string CheckRentability(LoanInformation loan, List<RentInformation> rents)
    {

        string displayOnlyRentable = OnlyRentable ? "d-none" : "d-show";
        string result = $"table-danger not-rentable {displayOnlyRentable}";


        if (rents.Where(rent => rent.Rental70Pourcent >= loan.MonthlyCostWithInsurrance).Any()){

            result = $"table-success rentable";
            if (OnlyRentable)
                result += " d-show";
        }
        return result;
    }
}
